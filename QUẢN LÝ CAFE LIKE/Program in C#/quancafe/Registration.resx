<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>